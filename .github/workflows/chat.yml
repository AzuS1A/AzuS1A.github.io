name: Chat Log Roller

on:
  schedule:
    - cron: "*/30 * * * *"   # 每 30 分钟
  workflow_dispatch:         # 手动触发
  push:                      # 推送也触发一次，便于调试

jobs:
  roll:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: gh-pages        # 或 main，根据你托管分支
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install deps
        run: pip install aiofiles
      - name: Generate /api files
        run: |
          python <<'PY'
import asyncio, json, aiofiles, datetime, os, glob
from pathlib import Path

root = Path('api')
root.mkdir(exist_ok=True)

# 计算当前 30 分钟槽
now = datetime.datetime.utcnow()
slot = now.replace(minute=(now.minute//30)*30, second=0, microsecond=0)

# 当前房间 list（可以扩展）
rooms = ['default', 'room2']

for room in rooms:
    # 归档目录
    folder = root / slot.strftime('%Y-%m-%d') / slot.strftime('%H-%M')
    folder.mkdir(parents=True, exist_ok=True)
    logfile = folder / 'chat.jsonl'

    # 合并旧数据
    records = []
    pattern = str(root / '*' / '*' / room / 'chat.jsonl')
    for fp in sorted(glob.glob(pattern), reverse=True)[:5]:  # 最近 5 个文件
        try:
            with open(fp, encoding='utf-8') as f:
                records.extend([json.loads(l) for l in f])
        except Exception:
            pass
    # 截断仅保留最后 50 条
    records = records[-50:]
    # 写归档
    with open(logfile, 'w', encoding='utf-8') as f:
        for r in records:
            f.write(json.dumps(r, ensure_ascii=False) + '\n')

    # 生成公开轮询文件
    arr = [{"id": i, **r} for i, r in enumerate(records, 1)]
    with open(root / f'chat-{room}.json', 'w', encoding='utf-8') as f:
        json.dump(arr, f, ensure_ascii=False, indent=0)

# 删除 7 天前的归档
cut = now - datetime.timedelta(days=7)
for old in root.glob('*/*/*'):
    try:
        if datetime.datetime.strptime(old.parent.name + '-' + old.parent.parent.name, '%H-%M-%Y-%m-%d') < cut:
            for f in old.iterdir():
                f.unlink()
            old.rmdir()
    except:
        pass
PY
      - name: Commit & push
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add api
          git commit -m "Update chat logs" || true
          git push